% language: origami
// FIXME: this is a mess and needs to be better thought out...

record Open_Door(index :: Integer)
record Closed_Door(index :: Integer)

interface Door {
  get self.is_open :: Boolean;
  get self.description :: String;
  get self.as_emoji :: String;
}

implement Door for Open_Door {
  get self.is_open = true;
  get self.description = "Door %d{index} is open." |> string.format({ index: self.index });
  get self.as_emoji = "_";
}

implement Door for Closed_Door {
  get self.is_open = false;
  get self.description = "Door %d{index} is closed." |> string.format({ index: self.index });
  get self.as_emoji = "ğŸšª";
}

function is_perfect_square(i) {
  let n = integer.to_float(i);
  float.square_root(n) == float.round(float.square_root(i));
}

define doors =
  range(1, 100)
  |> iterable.map(i => {
       if is_perfect_square(i) then new Open_Door(i)
       else new Closed_Door(i);
     })
  |> array.from_iterable(_);


define all_open = doors |> array.filter(_, _.is_open)
                        |> array.map(_, _.index);

define all_closed = doors |> array.filter(_, _.is_open >> (not _))
                          |> array.map(_, _.index);


function main(_) *{
  !write_line("");
  !write_line("What state are the doors in after the last pass?");
  
  let state = doors |> array.map(_, _.as_emoji) |> array.join(_, "");
  !write_line(state);

  !write_line("");
  !write_line("Which doors are open?");
  !write_line(all_open |> array.join(_, ", "));

  !write_line("");
  !write_line("Which doors are closed?");
  !write_line(all_closed |> array.join(_, ", "));
}
