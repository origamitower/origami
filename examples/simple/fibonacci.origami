% language: origami

import "@origami/io" exposing write_line;
import "@origami/foundation" exposing string;
import "@origami/prelude" exposing (_ == _), (_ - _), (_ + _);

function fibonacci(number) {
  if number == 0 then 0
  else if number == 1 then 1
  else fibonacci(number - 1) + fibonacci(number - 2);
}

// should optimise tail calls here
function fibonacci_tail(number) {
  let go = (x, m, n) => 
    if x == 0 then n 
    else go(x - 1, m, n + m);

  go(number, 0, 1);
}

function main(_) *{
  !write_line("Fib 20: %d{n}" |> string.format({ n: fibonacci(20) }));
  !write_line("Fib 100: %d{n}" |> string.format({ n: fibonacci_tail(100) }));
}