% version: 1
% pass: true

function main() {
  // Let
  let x = 1;
  let mutable y = x;

  // Assert
  assert x === 1;

  // Loop
  foreach x of y { }
  repeat while x { }
  repeat until x { }
  repeat with x from 1 to 2 { }
  repeat with x from 1 to 2 by 3 { }
  repeat { }

  // If
  if a { }
  if a { } else if b { }
  if a { } else if b { } else if c { } else if d { } else { }
  if a { } else { }
}

function pattern_matching() {
  match x {
    // Simple values
    case 1_000: a;
    case true: a;
    case "foo": a;

    // Arrays
    case [a, b, c]: a;
    case [a, ...b]: a;

    // Objects
    case { a: b, c: d }: a;

    // Extractors
    case Foo(a, b, c): a;

    // Variables
    case a when a > 1: a;

    // Wildcard
    default: a;
  }
}